Vagrant.configure(2) do |config|
    config.vm.box = "ubuntu/trusty64"
    config.vm.synced_folder ".", "{{ cookiecutter.snc_dr }}"
    config.vm.provision :shell, path: "provisions/default.sh"

    # Nginx Proxy
    config.vm.define "ngp" do |ngp|
      ngp.vm.provision :shell, path: "provisions/nginx_proxy.sh"

      ngp.vm.network "private_network",
        ip: "{{ cookiecutter.nginx_proxy_ip }}"

      ngp.vm.network :forwarded_port, guest: 80, host: 1337

      ngp.vm.provider :virtualbox do |v|
        v.customize [
          "modifyvm", :id,
          "--cpus", {{ cookiecutter.nginx_proxy_cpus }}
        ]

        v.customize [
          "modifyvm", :id,
          "--memory", {{ cookiecutter.nginx_proxy_ram }}
        ]

        v.customize [
          "modifyvm", :id,
          "--name", "{{ cookiecutter.project_name }}-sails-proxy"
        ]
      end
    end

    # Sails
    config.vm.define "sls" do |sls|
      sls.vm.provision :shell, path: "provisions/sails.sh"

      sls.vm.network "private_network",
        ip: "{{ cookiecutter.sails_ip }}"

      sls.vm.provider "virtualbox" do |v|
        v.customize [
          "modifyvm", :id,
          "--cpus", {{ cookiecutter.sails_cpus }}
        ]

        v.customize [
          "modifyvm", :id,
          "--memory", {{ cookiecutter.sails_ram }}
        ]

        v.customize [
          "modifyvm", :id,
          "--name", "{{ cookiecutter.project_name }}-sails"
        ]
      end
    end

    # DataBase
    config.vm.define "db" do |db|
      db.vm.provision :shell, path: "provisions/db.sh"
      db.vm.network "private_network",
        ip: "{{ cookiecutter.db_ip }}"

      db.vm.provider "virtualbox" do |v|
        v.customize [
          "modifyvm", :id,
          "--cpus", {{ cookiecutter.db_cpus }}
        ]

        v.customize [
          "modifyvm", :id,
          "--memory", {{ cookiecutter.db_ram }}
        ]

        v.customize [
          "modifyvm", :id,
          "--name", "{{ cookiecutter.project_name }}-sails-db"
        ]
      end
    end
end
